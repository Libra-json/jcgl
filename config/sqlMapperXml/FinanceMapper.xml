<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xin.mapper.FinanceMapper">

	<!-- 通用查询映射结果 -->
	<resultMap id="BaseResultMap" type="com.xin.bean.Finance">
		<id column="f_id" property="fId" />
		<result column="stu_no" property="stuNo" />
		<result column="tea_class" property="teaClass" />
		<result column="need_money" property="needMoney" />
		<result column="practical_money" property="practicalMoney" />
		<result column="f_date" property="fDate" jdbcType="TIMESTAMP" />
		<result column="f_way" property="fWay" />
		<result column="f_accumulative" property="fAccumulative" />
		<result column="f_state" property="fState" />
		<result column="f_obligate" property="fObligate" />
		<association property="student" javaType="com.xin.bean.Student">
			<id property="sId" column="s_id" />
			<result property="sName" column="s_name" />
			<result column="s_content" property="sContent" />
			<result column="academy_id" property="academyId" />
			<result property="sGradations" column="s_gradations" />
			<result property="sContent" column="s_content" />
			<result property="stype" column="s_type" />
		</association>
		<association property="user" javaType="com.xin.bean.User">
			<id property="id" column="id" />
			<result property="name" column="name" />
		</association>
		<!-- <association property="academy" javaType="com.xin.bean.Academy">
			<id property="aId" column="a_id" />
			<result property="aSchool" column="a_school" />
			<result property="aMajor" column="a_major" />
		</association> -->
	</resultMap>
	<resultMap type="com.xin.commons.utils.PageJson" id="PageResult">
		<result property="total" column="total"/>
	</resultMap>
	
	<!-- 字段 -->
	<sql id="field">
		F.f_id,
		S.s_name,
		S.s_gradations,
		S.s_content,
		S.s_type,
		S.academy_id,
		U.`name`,
		F.stu_no,
		F.tea_class,
		F.need_money,
		F.practical_money,
		F.f_date,
		F.f_way,
		F.f_accumulative,
		F.f_state,
		F.f_obligate
	</sql>
	
	<sql id="table_field">
		F.f_id,
		F.stu_no,
		F.tea_class,
		F.need_money,
		F.practical_money,
		F.f_date,
		F.f_way,
		F.f_accumulative,
		F.f_state,
		F.f_obligate
	</sql>
	
	<sql id="tableName">
		finance
	</sql>
	
	<select id="financepage" resultMap="BaseResultMap">
		select * from finance F left join student S 
		on F.stu_no=S.s_studentno
		where stu_no = #{arg0} limit #{arg1},#{arg2}
	</select>
	
	<select id="selectBystuno" resultMap="BaseResultMap">
		select * from finance where stu_no = #{stuNo}
	</select>
	
	<select id="queryTotal" resultMap="PageResult">
		select count(*) total from finance where stu_no = #{arg0};
	</select>
	
	<select id="financepagebyteaid" resultMap="BaseResultMap">
		select * from student S left join finance F on S.s_studentno = F.stu_no left join user U on S.user_id=U.id
		where U.id = #{arg0} limit #{arg1},#{arg2}
	</select>
	
	<select id="queryTotalbyteaid" resultMap="PageResult">
		select count(*) total from student S left join finance F on S.s_studentno = F.stu_no left join `user` U on S.user_id=U.id  where U.id = #{arg0};
	</select>
	
	<select id="selectFinancePage" resultMap="BaseResultMap">
		select 
			<include refid="field" /> 
		from finance F left join student S on F.stu_no=S.s_studentno left join `user` U on S.user_id=U.id 
		<where>
            <if test=" username != null and username != '' ">
                U.`name` like #{username}
            </if>
            <if test=" stuNo != null and stuNo != '' ">
              	and F.STU_NO like #{stuNo}
            </if>
            <if test=" fState != null and fState != 0 ">
              	and F.f_state = #{fState}
            </if>
            <if test=" startTime != null ">
                <![CDATA[ and f_date >= #{startTime} ]]>
            </if>
            <if test=" endTime != null ">
                <![CDATA[ and f_date <= #{endTime} ]]>
            </if>
            <if test=" stypeone != null and stypeone != 0 ">
              	and (S.s_type = #{stypeone} or S.s_type = #{stypetwo} or S.s_type = #{stypethree})
            </if>
        </where>
	</select>
	
	<select id="selectFinanceAll" parameterType="com.xin.bean.Finance" resultMap="BaseResultMap">
		select 
			<include refid="field" /> 
		from finance F left join student S on F.stu_no=S.s_studentno left join `user` U on S.user_id=U.id 
		<where>
            <if test=" teaClass != null and teaClass != '' ">
                U.`name` like #{teaClass}
            </if>
            <if test=" stuNo != null and stuNo != '' ">
              	and F.stu_no like #{stuNo}
            </if>
            <if test=" fState != null and fState != 0 ">
              	and F.f_state = #{fState}
            </if>
            <if test=" createdateStart != null ">
                <![CDATA[ and f_date >= #{createdateStart} ]]>
            </if>
            <if test=" createdateEnd != null ">
                <![CDATA[ and f_date <= #{createdateEnd} ]]>
            </if>
            <if test=" stypeone != null and stypeone != 0 ">
              	and (S.s_type = #{stypeone} or S.s_type = #{stypetwo} or S.s_type = #{stypethree})
            </if>
        </where> order by f_date desc
	</select>
	
	<select id="selectfinanceById" parameterType="Integer" resultMap="BaseResultMap">
		select <include refid="table_field" /> from finance F where F.f_id = #{id}
	</select>
	
	<insert id="financeInsert" parameterType="com.xin.bean.Finance">
		insert into <include refid="tableName"></include>(stu_no,tea_class,need_money,practical_money,f_date,f_way,f_accumulative,f_state,f_obligate) values(
			#{stuNo},
			#{teaClass},
			#{needMoney},
			#{practicalMoney},
			#{fDate},
			#{fWay},
			#{fAccumulative},
			#{fState},
			#{fObligate}
		)
	</insert>
	
	<update id="updateFinance" parameterType="com.xin.bean.Finance">
		update <include refid="tableName"></include> 
		<set>
			<if test="stuNo!=null and stuNo!='' ">
				stu_no=#{stuNo},
			</if>
			<if test="teaClass!=null and teaClass!='' ">
				tea_class=#{teaClass},
			</if>
			<if test="needMoney!=null and needMoney!='' ">
				need_money=#{needMoney},
			</if>
			<if test="practicalMoney!=null and practicalMoney!='' ">
				practical_money=#{practicalMoney},
			</if>
			<if test="fDate!=null">
				f_date=#{fDate,jdbcType=TIMESTAMP},
			</if>
			<if test="fWay!=null and fWay!='' ">
				f_way=#{fWay},
			</if>
			<if test="fAccumulative!=null and fAccumulative!='' ">
				f_accumulative=#{fAccumulative},
			</if>
			<if test="fState!=null and fState!='' ">
				f_state=#{fState},
			</if>
		</set>
		WHERE F_ID=#{fId}
	</update>
	
	<update id="updateBatchFinance" parameterType="com.xin.bean.Finance">
		update <include refid="tableName"></include> 
		<set>
			<if test="practicalMoney!=null and practicalMoney!='' ">
				practical_money=practical_money+#{practicalMoney},
			</if>
			<if test="fAccumulative!=null and fAccumulative!='' ">
				f_accumulative=f_accumulative+#{fAccumulative},
			</if>
			<if test="fWay!=null and fWay!='' ">
				f_way=#{fWay},
			</if>
		</set>
		where f_id = #{fId}
	</update>
	
	<delete id="deleteFinance" parameterType="Integer">
		delete from <include refid="tableName"></include> where f_id=#{id}
	</delete>
</mapper>
